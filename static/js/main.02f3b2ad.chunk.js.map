{"version":3,"sources":["serviceWorker.js","components/searchBox.jsx","searchApp.js","index.js"],"names":["Boolean","window","location","hostname","match","searchTerm","SearchBox","props","handleShowMore","bind","onClick","state","repositories","showItems","this","setState","length","style","fontSize","type","className","placeholder","ref","input","searchBox","name","textAlign","display","gridTemplateColumns","gridGap","slice","map","item","index","class","width","key","full_name","language","description","href","html_url","stargazers_count","open_issues_count","event","endpoint","value","console","log","fetch","then","blob","json","response","items","preventDefault","Component","SearchApp","headerStyle","color","padding","divStyle","height","margin","justifyContent","alignItems","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mLAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,UChBFC,E,0CAqGWC,E,YAlGb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,MAAQ,CACXC,aAAc,GACdC,UAAW,GANI,E,8EAWjBC,KAAKC,SAAS,CACZF,UACEC,KAAKH,MAAME,WAAaC,KAAKH,MAAMC,aAAaI,OAC5CF,KAAKH,MAAME,UACXC,KAAKH,MAAME,UAAY,M,+BAIvB,IAAD,OACP,OACE,6BACE,8BACE,gCACE,2BACEI,MAAO,CAAEC,SAAU,QACnBC,KAAK,OACLC,UAAU,uBACVC,YAAY,SACZC,IAAK,SAAAC,GACH,EAAKC,UAAYD,KAGrB,4BACEN,MAAO,CAAEC,SAAU,QACnBR,QAASI,KAAKJ,QACdU,UAAU,wCAHZ,YAUJ,yBAAKA,UAAU,aAAaN,KAAKP,MAAMkB,MACvC,wBAAIR,MAAO,CAAES,UAAW,WAAxB,gBACA,wBACET,MAAO,CACLU,QAAS,OACTC,oBAAqB,iBACrBC,QAAS,KAGVf,KAAKH,MAAMC,aACTkB,MAAM,EAAGhB,KAAKH,MAAME,WACpBkB,KAAI,SAACC,EAAMC,GAAP,OACH,yBAAKC,MAAM,OAAOjB,MAAO,CAAEkB,MAAO,SAAWC,IAAKH,GAChD,yBAAKC,MAAM,aACT,wBAAIA,MAAM,cAAcF,EAAKK,WAC7B,wBAAIH,MAAM,iCAAiCF,EAAKM,UAChD,uBAAGJ,MAAM,aAAaF,EAAKO,aAC3B,uBAAGC,KAAMR,EAAKS,SAAUP,MAAM,aAC3BF,EAAKS,UAER,uBAAGP,MAAM,aAAT,UAA6BF,EAAKU,kBAClC,uBAAGR,MAAM,aAAT,gBAAmCF,EAAKW,mBACxC,uBAAGH,KAAK,IAAIN,MAAM,aAAlB,0BAOV,4BACEjB,MAAO,CAAEC,SAAU,QACnBR,QAASI,KAAKN,eACdY,UAAU,wCAHZ,gB,8BAWEwB,GAAQ,IAAD,OAETC,EACF,uEAFFxC,EAAaS,KAAKU,UAAUsB,OAI5BC,QAAQC,IAAI3C,GACZ4C,MAAMJ,GACHK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACJ,EAAKtC,SAAS,CAAEH,aAAcyC,EAASC,WAG3CV,EAAMW,qB,GAhGcC,aCiCTC,E,iLAhCX,IAAMxC,EAAQ,CACZyC,YAAa,CACXhC,UAAW,SACXiC,MAAO,QACPC,QAAS,QAGXC,SAAU,CACRC,OAAQ,OACRC,OAAQ,OACRpC,QAAS,OACTqC,eAAgB,SAChBC,WAAY,WAIhB,OACE,8BACE,wBAAIhD,MAAOA,EAAMyC,aAAjB,4BACA,yBACEtC,UAAU,2CACVH,MAAOA,EAAM4C,UAEb,6BACE,kBAAC,EAAD,a,GA1BYL,aCKxBU,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,SH2HjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtB,MAAK,SAAAuB,GACjCA,EAAaC,iB","file":"static/js/main.02f3b2ad.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\n\r\nlet searchTerm;\r\n\r\nclass SearchBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleShowMore = this.handleShowMore.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    this.state = {\r\n      repositories: [],\r\n      showItems: 6\r\n    };\r\n  }\r\n\r\n  handleShowMore() {\r\n    this.setState({\r\n      showItems:\r\n        this.state.showItems >= this.state.repositories.length\r\n          ? this.state.showItems\r\n          : this.state.showItems + 6\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <center>\r\n            <input\r\n              style={{ fontSize: \"25px\" }}\r\n              type=\"text\"\r\n              className=\"form-control mr-sm-2\"\r\n              placeholder=\"Search\"\r\n              ref={input => {\r\n                this.searchBox = input;\r\n              }}\r\n            />\r\n            <button\r\n              style={{ fontSize: \"25px\" }}\r\n              onClick={this.onClick}\r\n              className=\"btn btn-outline-success my-2 my-sm-0\"\r\n            >\r\n              Search\r\n            </button>\r\n          </center>\r\n        </form>\r\n\r\n        <div className=\"foundRepo\">{this.props.name}</div>\r\n        <h2 style={{ textAlign: \"center\" }}>Repositories</h2>\r\n        <ul\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(2, 1fr)\",\r\n            gridGap: 20\r\n          }}\r\n        >\r\n          {this.state.repositories\r\n            .slice(0, this.state.showItems)\r\n            .map((item, index) => (\r\n              <div class=\"card\" style={{ width: \"40rem\" }} key={index}>\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">{item.full_name}</h5>\r\n                  <h6 class=\"card-subtitle mb-2 text-muted\">{item.language}</h6>\r\n                  <p class=\"card-text\">{item.description}</p>\r\n                  <a href={item.html_url} class=\"card-link\">\r\n                    {item.html_url}\r\n                  </a>\r\n                  <a class=\"card-link\">Stars: {item.stargazers_count}</a>\r\n                  <a class=\"card-link\">Open Issues: {item.open_issues_count}</a>\r\n                  <a href=\"#\" class=\"card-link\">\r\n                    Top Contributors\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </ul>\r\n        <button\r\n          style={{ fontSize: \"25px\" }}\r\n          onClick={this.handleShowMore}\r\n          className=\"btn btn-outline-success my-2 my-sm-0\"\r\n        >\r\n          Show More\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onClick(event) {\r\n    searchTerm = this.searchBox.value;\r\n    let endpoint =\r\n      \"https://api.github.com/search/repositories?sort=stars&order=desc&q=\" +\r\n      searchTerm;\r\n    console.log(searchTerm);\r\n    fetch(endpoint)\r\n      .then(blob => blob.json())\r\n      .then(response => {\r\n        this.setState({ repositories: response.items });\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n}\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport SearchBox from \"./components/searchBox\";\r\n\r\nclass SearchApp extends Component {\r\n  render() {\r\n    const style = {\r\n      headerStyle: {\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        padding: \"50px\"\r\n      },\r\n\r\n      divStyle: {\r\n        height: \"auto\",\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }\r\n    };\r\n\r\n    return (\r\n      <main>\r\n        <h1 style={style.headerStyle}>Busqueda de Repositorios</h1>\r\n        <div\r\n          className=\"form-inline navbar navbar-light bg-light\"\r\n          style={style.divStyle}\r\n        >\r\n          <div>\r\n            <SearchBox />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport SearchApp from \"./searchApp\";\n\nReactDOM.render(<SearchApp />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}